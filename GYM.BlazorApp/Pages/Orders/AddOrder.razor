
@page "/order/add"
@page "/order/edit/{orderId:int}"

@inject IGenericService<OrderViewModel> OrderService
@inject NavigationManager NavigationManager

<h2>@Title order</h2>
<hr />

<EditForm Model="@Order" OnValidSubmit="SaveOrder">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="@Order!.Title" class="form-label">Title</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="Order.Title" />
        </div>
        <ValidationMessage For="@(() => Order.Title)" />
    </div>
    <div class="mb-3">
        <label for="@Order.Cost" class="form-label">Cost</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="Order.Cost" />
        </div>
        <ValidationMessage For="@(() => Order.Cost)" />
    </div>
    <div class="mb-3">
        <label for="@Order.Date" class="form-label">Date</label>
        <div class="col-md-4">
            <InputDate class="form-control" @bind-Value="Order.Date" />
        </div>
        <ValidationMessage For="@(() => Order.Date)" />
    </div>
    <div class="mb-3">
        <label for="@Order.Description" class="form-label">Description</label>
        <div class="col-md-4">
            <InputTextArea class="form-control" @bind-Value="Order.Description" />
        </div>
        <ValidationMessage For="@(() => Order.Description)" />
    </div>
    <div class="mb-3">
        <label for="@Order.VisitorId" class="form-label">Visitor Id</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="Order.VisitorId" />
        </div>
        <ValidationMessage For="@(() => Order.VisitorId)" />
    </div>
    <div class="btn-group">s
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int OrderId { get; set; }
    protected string Title = "Add";
    protected OrderViewModel? Order = new();

    protected override async Task OnParametersSetAsync()
    {
        if (OrderId != 0)
        {
            Title = "Edit";
           Order = await OrderService.Get("/" + OrderId);
        }
    }

    private async Task SaveOrder()
    {
        if (Order!.Id != 0)
        {
            await OrderService.Update(Order);
        }
        else
        {
            await OrderService.Create(Order);
        }

        Cancel();
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/orders");
    }
}
